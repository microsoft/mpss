steps:
- task: Powershell@2
  displayName: 'Set Environment Variables'
  inputs:
    targetType: 'inline'
    script: |
        $root = $Env:ANDROID_HOME -or $Env:ANDROID_SDK_ROOT
        if (-not $root) { throw "ANDROID_HOME / ANDROID_SDK_ROOT not set." }

        $api = (Get-ChildItem "$root\platforms" -Directory |
                Where-Object Name -match '^android-(\d+)$' |
                Sort-Object { [int]($_.Name -replace 'android-','') } -Descending |
                Select-Object -First 1).Name

        echo "Using Android API: $api"

        dir env:
        $env:ANDROID_HOME = "$(ANDROID_HOME)"
        $env:ANDROID_SDK_ROOT = "$(ANDROID_SDK_ROOT)"
        $env:ANDROID_NDK_HOME = "$(ANDROID_NDK_HOME)"
        $env:ANDROID_NDK_ROOT = "$(ANDROID_NDK_ROOT)"
        Write-Host "Environment variables set for Android SDK and NDK."

- task: CmdLine@2
  displayName: 'Install Android SDK'
  inputs:
    script: |
      echo "Installing Android SDK..."
      echo "Android SDK: $(ANDROID_SDK_ROOT)"
      echo "Android NDK: $(ANDROID_NDK_ROOT)"
      echo "Android NDK Home: $(ANDROID_NDK_HOME)"
      echo "Android Home: $(ANDROID_HOME)"

      echo "Platforms and Build Tools:"
      dir "$(ANDROID_SDK_ROOT)/platforms"

      echo "ANDROID_HOME=$(ANDROID_HOME)" >> $(Build.SourcesDirectory)/.env
      echo "ANDROID_SDK_ROOT=$(ANDROID_SDK_ROOT)" >> $(Build.SourcesDirectory)/.env
      echo "ANDROID_NDK_HOME=$(ANDROID_NDK_HOME)" >> $(Build.SourcesDirectory)/.env
      echo "ANDROID_NDK_ROOT=$(ANDROID_NDK_ROOT)" >> $(Build.SourcesDirectory)/.env

      sdkmanager --install "platforms;android-35" "build-tools;35.0.0"
    workingDirectory: '$(Build.SourcesDirectory)'
    failOnStderr: false

# - task: CmdLine@2
#   displayName: 'Bootstrap vcpkg'
#   inputs:
#     script: |
#       cd $(Build.SourcesDirectory)
#       git clone https://github.com/microsoft/vcpkg.git
#       cd vcpkg
#       git checkout 2025.06.13
#       bootstrap-vcpkg.bat -disableMetrics
#     workingDirectory: '$(Build.SourcesDirectory)'
#     failOnStderr: false

# - task: CMake@1
#   displayName: 'Configure MPSS for x64'
#   inputs:
#     cmakeArgs: >
#         -S .
#         -B build-x64
#         -GNinja
#         -DCMAKE_BUILD_TYPE='${{ parameters.configuration }}'
#         -DMPSS_BUILD_MPSS_OPENSSL_STATIC=ON
#         -DCMAKE_SYSTEM_NAME=Android
#         -DCMAKE_ANDROID_ARCH_ABI=x86_64
#         -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake
#     workingDirectory: '$(Build.SourcesDirectory)'

# - task: CMake@1
#   displayName: 'Configure MPSS for Arm64'
#   inputs:
#     cmakeArgs: >
#         -S .
#         -B build-arm64
#         -DCMAKE_BUILD_TYPE='${{ parameters.configuration }}'
#         -DMPSS_BUILD_MPSS_OPENSSL_STATIC=ON
#         -DCMAKE_SYSTEM_NAME=Android
#         -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a
#         -DCMAKE_TOOLCHAIN_FILE=$(Build.SourcesDirectory)/vcpkg/scripts/buildsystems/vcpkg.cmake
#     workingDirectory: '$(Build.SourcesDirectory)'

# - task: CMake@1
#   displayName: 'Build MPSS for x64'
#   inputs:
#     cmakeArgs: --build build-x64 --config '${{ parameters.configuration }}'
#     workingDirectory: '$(Build.SourcesDirectory)'

# - task: CMake@1
#   displayName: 'Build MPSS for Arm64'
#   inputs:
#     cmakeArgs: --build build-arm64 --config '${{ parameters.configuration }}'
#     workingDirectory: '$(Build.SourcesDirectory)'
